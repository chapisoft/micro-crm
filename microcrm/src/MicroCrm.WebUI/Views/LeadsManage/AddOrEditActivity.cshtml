@model MicroCrm.Domain.Models.ContactActivity
@{
  Layout = null;
}

<form id="activity-form" class="needs-validation" asp-action="AddOrEdit" novalidate>
  <div class="panel-content">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <input type="hidden" asp-for="Id" />
    <input type="hidden" asp-for="CompanyId" />

    <div class="form-row">
      <div class="col-md-6 mb-3">
        <label class="form-label" asp-for="ContactId">  </label>
        @Html.DropDownList("ContactId", (IEnumerable<SelectListItem>)ViewBag.Contacts, new { @class = "form-control", required = "required" })
        <div class="invalid-feedback" asp-validation-for="ContactId">
        </div>
      </div>
    </div>
    <div class="form-row">
      <div class="col-md-6 mb-3">
        <label class="form-label" asp-for="Name">  </label>
        <input type="text" class="form-control" asp-for="Name" required maxlength="128">
        <div class="invalid-feedback" asp-validation-for="Name">
        </div>
      </div>
      <div class="col-md-6 mb-3">
        <label class="form-label" asp-for="Title">  </label>
        <input type="text" class="form-control" asp-for="Title" maxlength="128">
        <div class="invalid-feedback" asp-validation-for="Title">
        </div>
      </div>
    </div>
    <div class="form-row">
      <div class="col-md-6 mb-3">
        <label class="form-label" asp-for="Channel">  </label>
        @Html.DropDownList("Channel", (IEnumerable<SelectListItem>)ViewBag.Channel, new { @class = "form-control", required = "required" })
        <div class="invalid-feedback" asp-validation-for="Channel">
        </div>
      </div>
      <div class="col-md-6 mb-3">
        <label class="form-label" asp-for="ActivityDate">  </label>
        <input type="datetime-local" class="form-control" asp-for="ActivityDate">
        <div class="invalid-feedback" asp-validation-for="ActivityDate">
        </div>
      </div>
      <div class="col-md-6 mb-3">
        <label class="form-label" asp-for="Content">  </label>
        <input type="text" class="form-control" asp-for="Content" maxlength="250">
        <div class="invalid-feedback" asp-validation-for="Content">
        </div>
      </div>
    </div>


  </div>
  <div class="panel-content border-faded border-left-0 border-right-0 border-bottom-0 d-flex flex-row align-items-center p-2">
    <button class="btn btn-primary ml-auto" type="submit">Submit</button>
  </div>
</form>
<script>
  // Example starter JavaScript for disabling form submissions if there are invalid fields
  (function () {
    'use strict';
    window.addEventListener('load', function () {
      // Fetch all the forms we want to apply custom Bootstrap validation styles to
      var forms = $('#activity-form');
      // Loop over them and prevent submission
      var validation = Array.prototype.filter.call(forms, function (form) {
        form.addEventListener('submit', function (event) {
          if (form.checkValidity() === false) {
            event.preventDefault();
            event.stopPropagation();
          } else {
            event.preventDefault();
            event.stopPropagation();
            var request = $('#activity-form').serializeJSON();
            console.log(request)
            $.post('/ContactActivities/AddOrEdit', {
              __RequestVerificationToken: request.__RequestVerificationToken,
              request
            }).done(res => {
              if (res.success) {
                $('#activity-modal').modal('toggle');
                reloadActivity();
                toastr.success("Saved successfully");
              }
              else {
                //$.messager.alert('Error', res.err)
              }
            });

          }
          form.classList.add('was-validated');
        }, false);
      });
    }, false);
  })();

</script>
