@model MicroCrm.Domain.Models.Photo
@{
    ViewData["Title"] = "Photos";
    ViewData["PageName"] = "photos_index";
    ViewData["Heading"] = "<i class='fal fa-window text-primary'></i> Photos";
    ViewData["Category1"] = "CRM";
    ViewData["PageDescription"] = "";
}
<div class="row">
    <div class="col-lg-12 col-xl-12">
        <div id="panel-1" class="panel">
            <div class="panel-hdr">
                <h2>

                    Photos
                </h2>
                <div class="panel-toolbar">
                    <button class="btn btn-panel bg-transparent fs-xl w-auto h-auto rounded-0" data-action="panel-collapse" data-toggle="tooltip" data-offset="0,10" data-original-title="Collapse"><i class="fal fa-window-minimize"></i></button>
                    <button class="btn btn-panel bg-transparent fs-xl w-auto h-auto rounded-0" data-action="panel-fullscreen" data-toggle="tooltip" data-offset="0,10" data-original-title="Fullscreen"><i class="fal fa-expand"></i></button>
                </div>

            </div>
            <div class="panel-container enable-loader show">
                <div class="loader"><i class="fal fa-spinner-third fa-spin-4x fs-xxl"></i></div>
                <div class="panel-content py-2 rounded-bottom border-faded border-left-0 border-right-0  text-muted bg-subtlelight-fade ">
                    <div class="row no-gutters align-items-center">
                        <div class="col">
                            <!-- To enable authorization control, please refer to @@if (Html.IsAuthorize("Create") -->
                            <div class="btn-group btn-group-sm">
                                <button onclick="appendItem()" class="btn btn-default">
                                    <span class="fal fa-plus mr-1"></span> Add
                                </button>
                            </div>
                            <div class="btn-group btn-group-sm">
                                <button onclick="training()" class="btn btn-default">
                                    <span class="fal fa-brain mr-1"></span> Add
                                </button>
                            </div>
                            <div class="btn-group btn-group-sm">
                                <button onclick="opentest()" class="btn btn-default">
                                    <span class="fal fa-magic mr-1"></span> Test
                                </button>
                            </div>
                            <div class="btn-group btn-group-sm">
                                <button name="deletebutton" disabled onclick="deleteChecked()" class="btn btn-default">
                                    <span class="fal fa-times mr-1"></span> Delete
                                </button>
                            </div>
                            <div class="btn-group btn-group-sm">
                                <button onclick="reload()" class="btn btn-default"> <span class="fal fa-search mr-1"></span> Refresh </button>
                            </div>
                            <div class="btn-group btn-group-sm hidden-xs">
                                <button onclick="exportExcel()" class="btn btn-default">
                                    <span class="fal fa-file-export mr-1"></span>  Export
                                </button>
                            </div>

                        </div>

                    </div>

                </div>
                <div class="panel-content">
                    <div class="table-responsive">
                        <table id="photos_datagrid">
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- 弹出窗体form表单 -->


<div class="modal fade" id="uploadfilesmodal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">
                    Photo upload
                </h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"><i class="fal fa-times"></i></span>
                </button>
            </div>
            <div class="modal-body pb-0 pt-0">
                <div id="slimscroll">
                    <div id="file_empty_div" class="plfile_empty_div">
                        <span style="color: Dodgerblue;"><i class="fal fa-exclamation-circle"></i></span> Please use the [Select File] button to select the file.
                    </div>
                    <ul id="filelist"></ul>
                </div>
                <div id="plupload_max_size_alert" class="alert alert-primary mb-0  fw-300 fs-sm p-2  d-none" role="alert">
                    <strong>Success</strong> Please keep the uploaded file size within 20MB.
                </div>
                <input id="fileupload" type="file" name="fileupload" multiple style="display: none" />

            </div>
            <div class="modal-footer">
                <button id="selectuploadfilesbtn" type="button" class="btn btn-info">Select a document</button>
                <button id="postuploadfilesbtn" type="button" class="btn btn-primary">Upload</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="photoviewmodal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">
                    Preview photos
                </h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"><i class="fal fa-times"></i></span>
                </button>
            </div>
            <div class="modal-body pb-0 pt-0">
                <div class="card" id="photo_card">
                    <div id="photo-container">
                    </div>
                    @*<img id="photo_img" class="card-img-top" />*@
                    @*<canvas id="photo-canvas" style="width:456px;height:400px"></canvas>*@
                    <div class="card-body">
                        <h5 class="card-title"></h5>
                        <p class="card-text" id="detectedresult"></p>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button onclick="predict()" id="detectbutton" disabled type="button" class="btn btn-info">Detect</button>
                <button onclick="test()" id="testbutton" disabled type="button" class="btn btn-primary">Test</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="testviewmodal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">
                    Test
                </h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true"><i class="fal fa-times"></i></span>
                </button>
            </div>
            <div class="modal-body pb-0 pt-0">
            <input type="file" id="uploadimginput" accept="image/*" onchange="loadedphoto(event)" hidden>
                <div class="card" id="photo_card">
                    <div id="photo-container">
                    <img id="testphoto_img" class="card-img-top" />
                    </div>
                   <div class="card-body">
                        <h5 class="card-title" id="testresult"></h5>
                       
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button onclick="uploadphoto()" id="uploadimgbutton"  type="button" class="btn btn-info">Upload</button>
                <button onclick="testPredict()" id="testpredictbutton" disabled type="button" class="btn btn-primary">Predict</button>
            </div>
        </div>
    </div>
</div>

@section HeadBlock {

<link href="~/css/formplugins/bootstrap-daterangepicker/bootstrap-daterangepicker.css" rel="stylesheet" asp-append-version="true" />
<link href="~/js/easyui/themes/insdep/easyui.css" rel="stylesheet" asp-append-version="true" />
<style>

    .plfile_empty_div {
        position: absolute;
        left: 27%;
        top: 43%;
        z-index: 1;
    }

    ul#filelist {
        width: 450px;
        min-height: 100px;
        background: #fff;
        border-left: 0;
        border-right: 0;
        line-height: 24px;
        overflow: hidden;
        margin: 0 15px;
        padding: 5px 0;
        font-size: 12px;
    }

        ul#filelist li {
            list-style-type: none;
            margin: 4px 0;
            padding: 0px 17px 0px 0px;
        }

            ul#filelist li:hover {
                background: #d6e7f9;
            }

    #filelist li {
        clear: both;
        line-height: 22px;
        height: 22px;
    }

    .plupload_filename {
        width: 230px;
        display: block;
        float: left;
        word-wrap: break-word;
        margin-right: 10px;
        line-height: 22px;
        margin-left: 5px;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .plupload_filesize {
        width: 80px;
        line-height: 22px;
        display: block;
        float: left;
    }

    .plupload_d-none {
        display: none;
    }

    .plupload_fileremove {
        float: right;
        line-height: 22px;
        display: block;
        cursor: pointer;
    }

    .plupload_fileprogress {
        display: block;
        width: 60px;
        line-height: 22px;
        margin-right: 19px;
        float: right;
        text-align: right;
    }
</style>
}
@section ScriptsBlock {
<script src="https://unpkg.com/ml5@latest/dist/ml5.min.js" type="text/javascript"></script>
<script src="~/js/plugin/filesize/filesize.js"></script>
<script src="~/js/dependency/numeral/numeral.min.js" asp-append-version="true"></script>
<script src="~/js/dependency/moment/moment.js" asp-append-version="true"></script>
<script src="~/js/formplugins/bootstrap-daterangepicker/bootstrap-daterangepicker.js" asp-append-version="true"></script>
<script src="~/js/easyui/jquery.easyui.min.js" asp-append-version="true"></script>
<script src="~/js/easyui/plugins/datagrid-filter.js" asp-append-version="true"></script>
<script src="~/js/easyui/plugins/columns-ext.js" asp-append-version="true"></script>
<script src="~/js/easyui/plugins/columns-reset.js" asp-append-version="true"></script>
<script src="~/js/easyui/locale/easyui-lang-en.js" asp-append-version="true"></script>
<script src="~/js/easyui/jquery.easyui.component.js" asp-append-version="true"></script>
<script src="~/js/plugin/filesaver/FileSaver.js" asp-append-version="true"></script>
<script src="~/js/plugin/jquery.serializejson/jquery.serializejson.js" asp-append-version="true"></script>
<script src="~/js/jquery.custom.extend.js" asp-append-version="true"></script>
<script src="~/js/jquery.extend.formatter.js" asp-append-version="true"></script>
<script>
    let facemesh;
    let predictions = [];
    facemesh = ml5.facemesh(() => {
      console.log('facemesh mode ready')
      $('#detectbutton').attr('disabled', false);

    });
    $('#photoviewmodal').on('shown.bs.modal', function () {
      console.log('shown')
    })
    function testPredict(){
      const img = document.getElementById('testphoto_img');
      facemesh.predict(img).then(faces => {
        console.log(faces)
        if (faces) {
          knnClassifier.classify(faces[0].scaledMesh,(err,result)=>{
          console.log(result);
          $.messager.alert('Result:',result.label);
          $('#testresult').text(result.label);
         })
        }
      });
    }
    function loadedphoto(e){
      var reader = new FileReader();
      reader.onload = function(){
        var output = document.getElementById('testphoto_img');
        output.src = reader.result;
        if(knnClassifier.getNumLabels()>0){
          $('#testpredictbutton').attr('disabled', false);
        }
      };
      reader.readAsDataURL(e.target.files[0]);
    }
    function uploadphoto(){
      $('#uploadimginput').trigger('click');
    }
    function opentest(){
       $('#testviewmodal').modal('toggle');
    }
    function openphotoviewmodal(photo) {
      var div = document.getElementById('photo-container');
      div.innerHTML = '';
      //$('#photo_img').attr("src", photo.Path);
      var canvas = document.createElement('canvas');
      canvas.id = 'photo-canvas';
      canvas.setAttribute("photo-id", photo.Id);
      canvas.setAttribute("photo-name", photo.Name);
      var octx = canvas.getContext('2d');
      var img = new Image();
      var w= 456;
      img.src = photo.Path;
      img.onload = function () {
        canvas.width = img.width;
        canvas.height = img.height;
        octx.drawImage(img, 0, 0);
        while (canvas.width * 0.5 > w) {
          canvas.width *= 0.5;
          canvas.height *= 0.5;
          octx.drawImage(canvas, 0, 0, canvas.width, canvas.height);
        }
        canvas.width = w;
        canvas.height = canvas.width * img.height / img.width;
        octx.drawImage(img, 0, 0, canvas.width, canvas.height);
        var div = document.getElementById('photo-container');
        div.appendChild(canvas)
      }


      $('.card-title').text(photo.Name)
      $('#photoviewmodal').modal('toggle');
    }

    function predict() {
      const img = document.getElementById('photo-canvas');
      facemesh.predict(img).then(faces => {
        console.log(faces)
        if (faces) {
          const canvas = document.getElementById("photo-canvas");
          const photoId=canvas.getAttribute("photo-id");
          const photoName=canvas.getAttribute("photo-name");
          console.log(canvas)
          var draw = canvas.getContext("2d");
          var mesh = faces[0].scaledMesh;
          console.log(mesh);

          /* highlight facial landmark points on canvas board */
          draw.fillStyle = "#00FF00";

          for (i = 0; i < mesh.length; i++) {
            var [x, y, z] = mesh[i];
            draw.fillRect(Math.round(x), Math.round(y), 2, 2);
          }
          updateLandmarks(photoId,JSON.stringify(mesh));
          knnClassifier.addExample(mesh, photoName);
          canvas.setAttribute("photo-mesh", JSON.stringify(mesh));
          $('#testbutton').attr('disabled', false);
        }
      });
    }

    function updateLandmarks(id,landmarks){
     $.post('/Photos/Update',{Id:id,Landmarks:landmarks}).done(res=>{
      console.log(res);
      reload();
     }).fail(res=>{
      $.messager.alert('SaveFail', res, 'error');
     })
    }
    let knnClassifier =ml5.KNNClassifier();
    function training(){
       $.messager.progress({msg:'training....'});
       $.get('/Photos/GetAll').done(res=>{
        for(let i=0;i<50;i++){
        res.map(item=>{
        if(item.Landmarks){
        knnClassifier.addExample(JSON.parse(item.Landmarks), item.Name);
        }
        });
        }
        $.messager.progress('close')
           if(knnClassifier.getNumLabels()>0){
           knnClassifier.classify(JSON.parse(res[2].Landmarks),(err,result)=>{
             console.log(result);

         })
       $('#testbutton').attr('disabled', false);
       }
       })
    }
    async function  test(){
      if(knnClassifier.getNumLabels()>0){
         const canvas = document.getElementById("photo-canvas");
         const mesh=canvas.getAttribute("photo-mesh");
         const photoid=canvas.getAttribute("photo-id");
         let input=null;
         if(mesh){
            input = JSON.parse(mesh);
         }else{
            const item = await $.get('/Photos/GetById?id=' + photoid);
            console.log(item)
            input=JSON.parse(item.Landmarks);
         }
         knnClassifier.classify(input,(err,result)=>{
          console.log(result);
          $.messager.alert('Result:',result.label);
         })
      }else{
      $('#testbutton').attr('disabled', true);
      }
    }
</script>
<script>
    //Full Screen Event
    document.addEventListener('panel.onfullscreen', () => {
      $dg.treegrid('resize');
    });
        var $dg = $('#photos_datagrid');
        var EDITINLINE = true;
        var product = null;
    var editIndex = undefined;
    //Download ExcelImport Template

    //Execute Export to download Excel
    function exportExcel() {
      const filterRules = JSON.stringify($dg.datagrid('options').filterRules);
      console.log(filterRules);
      $.messager.progress({ title: 'Please wait', msg: 'Export in progress...' });
      let formData = new FormData();
      formData.append('filterRules', filterRules);
      formData.append('sort', 'Id');
      formData.append('order', 'asc');
      $.postDownload('/Photos/ExportExcel', formData).then(res => {
        $.messager.progress('close');
        toastr.success('Export successful!');
      }).catch(err => {
        //console.log(err);
        $.messager.progress('close');
        $.messager.alert('Export failed', err.statusText, 'error');
      });

    }
            //Pop-up details Message
    function previewphoto(id, index) {
      const photo = $dg.datagrid('getRows')[index];
      console.log(photo)
      openphotoviewmodal(photo)
    }
    function reload() {
      $dg.datagrid('uncheckAll');
      $dg.datagrid('reload');
    }
            //Added records
    function appendItem() {
      openuploadfilemodal();
    }


    //Delete the selected row
    function deleteChecked() {
      const checked = $dg.datagrid('getChecked').map(item => {
        return item.Id;
      });;
      if (checked.length > 0) {
        deleteRows(checked);
      } else {
        $.messager.alert('Success', 'Please select the record to be deleted first!', 'question');
      }
    }
    //Execute Delete
    function deleteRows(selected) {
      $.messager.confirm('Confirm', `Are you sure you want to delete these <span class='badge badge-icon position-relative'>${selected.length} </span> rows?`, result => {
        if (result) {
          $.post('/Photos/DeleteChecked', { id: selected })
            .done(response => {
              if (response.Succeeded) {
                toastr.error(`Successfully delete [${selected.length}] rows of records`);
                reload();
              } else {
                $.messager.alert('Error', response.err, 'error');
              }
            })
            .fail((jqXHR, textStatus, errorThrown) => {
              $.messager.alert('Error', `${jqXHR.status}: ${jqXHR.statusText} `, 'error');
            });
        }
      });
    }


    $(document).ready(function () {
      //Define the datagrid structure
      $dg.datagrid({
        rownumbers: true,
        checkOnSelect: false,
        selectOnCheck: false,
        idField: 'Id',
        sortName: 'Id',
        sortOrder: 'desc',
        remoteFilter: true,
        singleSelect: true,
        method: 'get',
        clientPaging: false,
        pagination: true,
        striped: true,
        filterRules: [],
        height: 670,
        pageSize: 15,
        pageList: [15, 20, 50, 100, 500, 2000],
        onBeforeLoad: function () {
          $('.enable-loader').removeClass('enable-loader')
        },
        onLoadSuccess: function (data) {
          editIndex = undefined;
          $("button[name*='deletebutton']").prop('disabled', true);
          $("button[name*='savebutton']").prop('disabled', true);
          $("button[name*='cancelbutton']").prop('disabled', true);
        },
        onCheckAll: function (rows) {
          if (rows.length > 0) {
            $("button[name*='deletebutton']").prop('disabled', false);
          }
        },
        onUncheckAll: function () {
          $("button[name*='deletebutton']").prop('disabled', true);
        },
        onCheck: function () {
          $("button[name*='deletebutton']").prop('disabled', false);
        },
        onUncheck: function () {
          const checked = $(this).datagrid('getChecked').length > 0;
          $("button[name*='deletebutton']").prop('disabled', !checked);
        },
        onSelect: function (index, row) {
          product = row;
        },
        onBeginEdit: function (index, row) {
          //const editors = $(this).datagrid('getEditors', index);

        },
        onEndEdit: function (index, row) {
          editIndex = undefined;
        },
        onBeforeEdit: function (index, row) {
          editIndex = index;
          row.editing = true;
          $("button[name*='deletebutton']").prop('disabled', false);
          $("button[name*='cancelbutton']").prop('disabled', false);
          $("button[name*='savebutton']").prop('disabled', false);
          $(this).datagrid('refreshRow', index);
        },
        onAfterEdit: function (index, row) {
          row.editing = false;
          editIndex = undefined;
          $(this).datagrid('refreshRow', index);
        },
        onCancelEdit: function (index, row) {
          row.editing = false;
          editIndex = undefined;
          $("button[name*='deletebutton']").prop('disabled', true);
          $("button[name*='savebutton']").prop('disabled', true);
          $("button[name*='cancelbutton']").prop('disabled', true);
          $(this).datagrid('refreshRow', index);
        },
        frozenColumns: [[
          /*Enable CheckBox selection function*/
          { field: 'ck', checkbox: true },
          {
            field: 'action',
            title: 'Operate',
            width: 85,
            sortable: false,
            resizable: true,
            formatter: function showdetailsformatter(value, row, index) {

                return `<div class="btn-group">\
                         <button onclick="previewphoto('${row.Id}',  ${index})" class="btn btn-primary btn-sm btn-icon waves-effect waves-themed" title="Preview photos" ><i class="fal fal fa-image"></i> </button>\
                      `
            }
          }
        ]],
        columns: [[
          {    /*Name*/
            field: 'Name',
            title: '@Html.DisplayNameFor(model => model.Name)',
            width: 160,
            hidden: false,
            sortable: true,
            resizable: true
          },
          {    /*路径*/
            field: 'Path',
            title: '@Html.DisplayNameFor(model => model.Path)',
            width: 220,
            hidden: false,
            sortable: true,
            resizable: true
          },
          {    /*size*/
            field: 'Size',
            title: '@Html.DisplayNameFor(model => model.Size)',
            width: 120,
            hidden: false,
            sortable: true,
            resizable: true,
            formatter: function (v) {
              return filesize(v);
            }
          },
          {    /*扫描结果*/
            field: 'Landmarks',
            title: '@Html.DisplayNameFor(model => model.Landmarks)',
            width: 280,
            hidden: false,
            sortable: true,
            resizable: true,

          }
        ]]
      })
        .datagrid('enableFilter', [
        ])
        .datagrid('load', '/Photos/GetData');
    }
    );

</script>


<script src="~/js/plugin/plupload/plupload.full.min.js"></script>
<script src="~/js/plugin/plupload/jquery.plupload.queue/jquery.plupload.queue.min.js"></script>
<script src="~/js/plugin/plupload/jquery.ui.plupload/jquery.ui.plupload.min.js"></script>
<script type="text/javascript">
    function openuploadfilemodal() {
      $('#uploadfilesmodal').modal('toggle');
    }
    document.addEventListener("DOMContentLoaded", function () {


      $('#slimscroll').slimScroll({
        height: '100px',
        railVisible: true,
        alwaysVisible: false,
      });
      var uploader = new plupload.Uploader({
        runtimes: 'html5,flash,silverlight,html4',
        filters: {
          max_file_size: "20mb"
        },
        browse_button: 'selectuploadfilesbtn', // this can be an id of a DOM element or the DOM element itself
        url: '/Photos/Upload',
      });
      uploader.init();
      //验证文件size
      plupload.addFileFilter('max_file_size', function (maxSize, file, cb) {
        var undef;
        if (file.size !== undef && maxSize && file.size > plupload.parseSize(maxSize)) {
          this.trigger('Error', {
            code: plupload.FILE_SIZE_ERROR,
            message: plupload.translate('File size error.'),
            file: file
          });
          cb(false);
        } else {
          cb(true);
        }
      });
      //初始化
      uploader.bind('Init', function (up) {
        $('#plupload_max_size_alert').addClass('d-none');
      });
      //设置post参数
      uploader.bind('BeforeUpload', function (up) {
        up.settings.multipart_params.tags = '';
      });
      //单击Select a document
      uploader.bind('Browse', function () {
        $('#plupload_max_size_alert').addClass('d-none');
      });
      //分段Upload
      uploader.bind('ChunkUploaded', function (up, file, info) {
        console.log(up, file, info)
      });
      //捕获Error
      uploader.bind('Error', function (up, error) {
        console.log(up, error)
        if (error.code == -600) {
          $('#plupload_max_size_alert').removeClass('d-none')
        } else {
          bootbox.alert(`Error:${error.message}`);
        }
      });
      //添加文件
      uploader.bind('FilesAdded', function (up, files) {
        $('#file_empty_div').hide()
        var html = '';
        plupload.each(files, function (file) {
          html += ` <li id="${file.id}"  >
                            <span class="plupload_filename">${file.name}</span>
                            <span id="filesize" class="plupload_filesize">(size:${plupload.formatSize(file.size)})</span>
                            <span id="plfilesize" class="plupload_d-none">${plupload.formatSize(file.size)}</span>
                            <span id="remove" class="plupload_fileremove">
                                        <a href="javascript:void(0);" class="btn btn-outline-info btn-xs btn-icon waves-effect waves-themed">
                                            <i class="fal fa-times"></i>
                                        </a>
                            </span>
                            <span id="progress" class="plupload_fileprogress"></span>
                            </li>`
          //html += '<li id="' + file.id + '">' + file.name + ' (' + plupload.formatSize(file.size) + ') <b></b></li>';
        });
        document.getElementById('filelist').innerHTML += html;
      });
      //Delete队列中的文件
      $(document).on('click', '#remove', function (e) {
        var li = $(this).closest('li');
        var fileid = li.attr('id');
        uploader.removeFile(fileid);
        li.remove()
        if ($('ul#filelist li').length == 0) {
          $('#file_empty_div').show();
        }
      });
      //Show进度
      uploader.bind('UploadProgress', function (up, file) {
        $(`li#${file.id} > .plupload_fileprogress`).text(file.percent + " %")

      });
      uploader.bind('BeforeChunkUpload', function (up, file) {
        //console.log('BeforeChunkUpload', up, file)

      });

      //完成Upload
      uploader.bind('UploadComplete', function (up, files) {
        //console.log('UploadComplete', up.files)
        $('#plupload_max_size_alert').addClass('d-none');
        $('#uploadfilesmodal').modal('toggle')
        uploader.files.forEach(function (item) {
          uploader.removeFile(item);
          $(`ul#filelist #${item.id}`).remove();
        });
        $('#file_empty_div').show();
        reload()
      });
      //开始Upload
      $('#postuploadfilesbtn').click(function () {
        uploader.start();
      });
    });
</script>
}
